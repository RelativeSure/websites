{"type":"route","meta":{"status":200,"headers":{"content-type":"text/plain;charset=UTF-8","x-next-cache-tags":"_N_T_/layout,_N_T_/llms-full.txt/layout,_N_T_/llms-full.txt/route,_N_T_/llms-full.txt"}},"body":"# Documentation\n\nWelcome to my documentation! Here you'll find guides, configurations, and resources organized by category.\n\n## Quick Links\n\n<Cards>\n  <Card title=\"Good Stuff\" href=\"/docs/goodstuff\" description=\"My favorite tools and configurations\" />\n\n  <Card title=\"Linux Guides\" href=\"/docs/linux\" description=\"Linux tips, tricks, and configurations\" />\n\n  <Card title=\"Projects\" href=\"/docs/projects\" description=\"Current and past projects\" />\n\n  <Card title=\"Bookmarks\" href=\"/docs/bookmarks\" description=\"Useful resources and links\" />\n</Cards>\n\n<Callout title=\"Built with Fumadocs\" type=\"info\">\n  This site uses [Fumadocs](https://fumadocs.dev) components for a modern documentation experience.\n</Callout>\n\n\n# AI Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const genAILinks = [\n  {\n    title: \"OpenRouter Unified Interface for LLM\",\n    href: \"https://openrouter.ai/\",\n  },\n];\n\nexport const llmAILinks = [\n  { title: \"T3\", href: \"https://t3.chat/\" },\n  { title: \"Claude\", href: \"https://claude.ai/\" },\n];\n\n<MyLinkGrid links={genAILinks} gridTitle=\"General AI\" />\n\n<MyLinkGrid links={llmAILinks} gridTitle=\"Language Models\" />\n\n\n# Developer Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const developerLinks = [\n  { title: \"DevDocs\", href: \"https://devdocs.io/\" },\n  {\n    title: \"Awesome Selfhosted\",\n    href: \"https://github.com/awesome-selfhosted/awesome-selfhosted\",\n  },\n  { title: \"Developer Roadmaps\", href: \"https://roadmap.sh/\" },\n  { title: \"Developer Documentation\", href: \"https://devdocs.io/\" }, // Note: Duplicate of DevDocs, intentional?\n  { title: \"Geany - IDE\", href: \"https://www.geany.org/\" },\n  { title: \"Shadcn - UI Components\", href: \"https://ui.shadcn.com/\" },\n  { title: \"Supermaven - AI Copilot\", href: \"https://supermaven.com/\" },\n  { title: \"Killercoda - DevOps\", href: \"https://killercoda.com/\" },\n  { title: \"The Valley of Code\", href: \"https://thevalleyofcode.com/\" },\n  { title: \"JSON Viewer\", href: \"https://www.jsonviewer.tools/\" },\n  { title: \"Learn Git Branching\", href: \"https://learngitbranching.js.org/\" },\n  { title: \"Open-Source Wiki\", href: \"https://js.wiki/\" },\n  { title: \"Oh Shit, Git?!\", href: \"https://ohshitgit.com/\" },\n  { title: \"Git Delta tool\", href: \"https://github.com/dandavison/delta\" },\n];\n\n<MyLinkGrid links={developerLinks} />\n\n\n# Discord Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const discordLinks = [\n  { title: \"Promcord\", href: \"https://github.com/zigsphere/promcord\" },\n  {\n    title: \"DiscordJS Bot Guide\",\n    href: \"https://github.com/AnIdiotsGuide/discordjs-bot-guide\",\n  },\n  {\n    title: \"Discord Data Package Explorer\",\n    href: \"https://ddpe.androz2091.fr/\",\n  },\n  {\n    title: \"Discord Formatting\",\n    href: \"https://c.r74n.com/discord/formatting#Timestamps\",\n  },\n  {\n    title: \"Discord Emoji Downloader\",\n    href: \"https://thatiemsz.github.io/Discord-Emoji-Downloader/\",\n  },\n  {\n    title: \"Discord Emoji List\",\n    href: \"https://www.prosettings.com/emoji-list/\",\n  },\n  {\n    title: \"Discord Date Time Converter\",\n    href: \"https://rauf.wtf/datetimecord/\",\n  },\n  {\n    title: \"RedBot - Docker\",\n    href: \"https://github.com/PhasecoreX/docker-red-discordbot\",\n  },\n  {\n    title: \"RedBot - Audio Module\",\n    href: \"https://twentysix26.github.io/Red-Docs/red_audio/\",\n  },\n  { title: \"RedBot - Cog Index\", href: \"https://index.discord.red/\" },\n  {\n    title: \"RedBot - ImgWelcome Module\",\n    href: \"https://github.com/aikaterna/imgwelcome\",\n  },\n];\n\n<MyLinkGrid links={discordLinks} gridTitle=\"Discord Tools & Resources\" />\n\n\n# Gaming Links & Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const gameLinks = [\n  {\n    title: \"Cyberpunk 2077 Optical Breacher\",\n    href: \"https://govizlora.github.io/optical-breacher/\",\n  },\n  { title: \"ASCII Games\", href: \"https://ligurio.github.io/awesome-ttygames/\" },\n  { title: \"Abandonware Games\", href: \"https://www.myabandonware.com/\" },\n  {\n    title: \"RDO Lobby Manager\",\n    href: \"https://www.nexusmods.com/reddeadredemption2/mods/772\",\n  },\n  { title: \"LostGamer\", href: \"https://lostgamer.io/\" },\n  { title: \"DOS Box\", href: \"https://www.dosbox.com/\" },\n  {\n    title: \"The Typing of the RegEx\",\n    href: \"https://thetypingoftheregex.com/\",\n  },\n  {\n    title: \"CloudBase Check for games in Cloud Gaming\",\n    href: \"https://cloudbase.gg/\",\n  },\n  {\n    title: \"Titanfall 2 modding and server framework\",\n    href: \"https://northstar.tf/\",\n  },\n  {\n    title: \"Fallout 4 - Modding Guide\",\n    href: \"https://themidnightride.moddinglinked.com/index.html\",\n  },\n  { title: \"Retro Games Online\", href: \"https://emulatoronline.com/\" },\n  { title: \"Townscaper\", href: \"http://oskarstalberg.com/Townscaper/\" },\n  // { title: \"Vimm\", href: \"https://vimm.net/\" } // This link was commented out\n];\n\n<MyLinkGrid links={gameLinks} />\n\n\n# Health & Well-being Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const healthLinks = [\n  {\n    title: \"You Feel Like Shit\",\n    href: \"https://youfeellikeshit.com/\",\n    description: \"An interactive flowchart for people who feel like shit.\",\n  },\n  {\n    title: \"Suicide Project\",\n    href: \"https://suicideproject.org/\",\n    description: \"Resources and support for those considering suicide.\",\n  },\n  {\n    title: \"Suicide... read this first\",\n    href: \"https://metanoia.org/suicide/\",\n    description: \"Important information for individuals in crisis.\",\n  },\n];\n\n<MyLinkGrid links={healthLinks} gridTitle=\"Mental Health Support Resources\" />\n\n\n# HTTP Tools & References\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const httpLinks = [\n  {\n    title: \"Mozilla SSL Configuration Generator\",\n    href: \"https://ssl-config.mozilla.org/\",\n    description: \"Generate secure SSL/TLS configurations for various servers.\",\n  },\n  {\n    title: \"HTTPie APIs\",\n    href: \"https://httpie.io/\",\n    description: \"A user-friendly CLI HTTP client and API testing platform.\",\n  },\n];\n\n<MyLinkGrid links={httpLinks} gridTitle=\"Essential HTTP Utilities\" />\n\n\n# Bookmarks\n\n# Bookmarks\n\nCurated collection of bookmarks organized by category - useful resources, tools, documentation, and references.\n\n## Categories\n\n* **AI** - AI tools, models, and resources\n* **Developer** - Development tools and resources\n* **Discord** - Discord servers and communities\n* **Games** - Gaming resources and communities\n* **Health** - Health and wellness resources\n* **HTTP** - HTTP tools and testing resources\n* **Kubernetes** - K8s tools, docs, and guides\n* **Linux** - Linux resources and tools\n* **Miscellaneous** - Various useful links\n* **Security** - Security tools and resources\n* **Tech** - Technology news and resources\n* **Windows** - Windows tools and resources\n\n\n# Kubernetes Resources & Guides\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const kubernetesLinks = [\n  {\n    title: \"Kubenomicon\",\n    href: \"https://kubenomicon.com/\",\n    description: \"A book of Kubernetes patterns and best practices.\",\n  },\n  {\n    title: \"Karmada\",\n    href: \"https://karmada.io/\",\n    description:\n      \"Open-source multi-cloud multi-cluster Kubernetes orchestration.\",\n  },\n  {\n    title: \"Kubernetes Goat\",\n    href: \"https://madhuakula.com/kubernetes-goat/\",\n    description:\n      \"A deliberately vulnerable Kubernetes cluster to learn security.\",\n  },\n  {\n    title: \"KubeCampus\",\n    href: \"https://kubecampus.io/\",\n    description: \"Interactive Kubernetes tutorials and learning platform.\",\n  },\n  {\n    title: \"Demystifying High Availability in Kubernetes Using Kubeadm\",\n    href: \"https://medium.com/velotio-perspectives/demystifying-high-availability-in-kubernetes-using-kubeadm-3d83ed8c458b\",\n    description: \"Article on setting up HA Kubernetes clusters with Kubeadm.\",\n  },\n  {\n    title:\n      \"Single-node Kubernetes on Home Lab using MicroK8s, Metallb, and Traefik\",\n    href: \"https://pacroy.com/single-node-kubernetes-on-home-lab-using-microk8s-metallb-and-traefik-7bb1ea38fcc2\",\n    description: \"Guide for a single-node K8s setup for home labs.\",\n  },\n  {\n    title: \"k8s-diagrams\",\n    href: \"https://github.com/Trois-Six/k8s-diagrams\",\n    description: \"A collection of Kubernetes architecture diagrams.\",\n  },\n];\n\n<MyLinkGrid links={kubernetesLinks} gridTitle=\"Key Kubernetes Tools & Learning Materials\" />\n\n\n# Linux Tools & Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const linuxLinks = [\n  {\n    title: \"CachyOS\",\n    href: \"https://cachyos.org/\",\n    description:\n      \"An Arch-based Linux distribution focused on performance and ease of use.\",\n  },\n  {\n    title: \"LazyVim\",\n    href: \"https://www.lazyvim.org/\",\n    description:\n      \"A Neovim setup powered by lazy.nvim to make it easy to customize and extend your config.\",\n  },\n  {\n    title: \"DevEnv\",\n    href: \"https://devenv.sh/\",\n    description:\n      \"Create development environments quickly and reproducibly with Nix.\",\n  },\n  {\n    title: \"Exa\",\n    href: \"https://github.com/ogham/exa\",\n    description: \"A modern replacement for ls.\",\n  },\n  {\n    title: \"GitHub Profile Summary Cards\",\n    href: \"https://github-profile-summary-cards.vercel.app/demo.html\",\n    description: \"Generate dynamic summary cards for your GitHub profile.\",\n  },\n  {\n    title: \"lsd (Next-Gen ls command)\",\n    href: \"https://github.com/lsd-rs/lsd\",\n    description:\n      \"The next gen ls command with lots of pretty colors and awesome icons.\",\n  },\n  {\n    title: \"Explain Shell Commands\",\n    href: \"https://explainshell.com/\",\n    description:\n      \"Write down a command-line to see the help text that matches each argument.\",\n  },\n  {\n    title: \"Btop\",\n    href: \"https://github.com/aristocratos/btop\",\n    description:\n      \"A resource monitor that shows usage and stats for processor, memory, disks, network and processes.\",\n  },\n  {\n    title: \"Commandlinefu sort-by-votes\",\n    href: \"https://www.commandlinefu.com/commands/browse/sort-by-votes\",\n    description: \"Find the most popular and useful command-line snippets.\",\n  },\n  {\n    title: \"Vim Adept\",\n    href: \"https://thevaluable.dev/vim-adept/\",\n    description: \"Resources for learning and mastering Vim.\",\n  },\n  {\n    title: \"AI-Powered shell\",\n    href: \"https://www.riveducha.com/openai-powered-linux-shell.html\",\n    description: \"Concept for an AI-enhanced Linux shell experience.\",\n  },\n  {\n    title: \"Timewarrior\",\n    href: \"https://timewarrior.net/\",\n    description: \"A command-line time tracking application.\",\n  },\n  {\n    title: \"ipcalc\",\n    href: \"https://linux.die.net/man/1/ipcalc\",\n    description: \"Man page for ipcalc, a utility to perform IP calculations.\",\n  },\n  {\n    title: \"Ping.pe\",\n    href: \"https://ping.pe/\",\n    description:\n      \"Ping, mtr, dig, and TCP port check from multiple global locations.\",\n  },\n  {\n    title: \"Termbin\",\n    href: \"https://termbin.com/\",\n    description: \"A simple way to share terminal output over the web.\",\n  },\n];\n\n<MyLinkGrid links={linuxLinks} gridTitle=\"Essential Linux Utilities & Learning\" />\n\n\n# Miscellaneous & Interesting Links\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const miscellaneousLinks = [\n  {\n    title: \"Pointer Pointer\",\n    href: \"https://pointerpointer.com/\",\n    description: \"Finds a photo of someone pointing exactly at your cursor.\",\n  },\n  {\n    title: \"TypeLit.io\",\n    href: \"https://www.typelit.io/\",\n    description: \"Practice typing by retyping entire classic novels.\",\n  },\n  {\n    title: \"Library of Babel\",\n    href: \"https://libraryofbabel.info/\",\n    description:\n      \"An online re-creation of Borges' Library of Babel, containing every possible page of 3200 characters.\",\n  },\n  {\n    title: \"Nuke Map\",\n    href: \"https://nuclearsecrecy.com/nukemap/\",\n    description:\n      \"Visualize the effects of nuclear detonations in various locations.\",\n  },\n  {\n    title: \"Updatecli\",\n    href: \"https://www.updatecli.io\",\n    description:\n      \"A declarative dependency management tool that helps keep your project dependencies up-to-date.\",\n  },\n];\n\n<MyLinkGrid links={miscellaneousLinks} gridTitle=\"Curated & Curious Finds\" />\n\n\n# Security Resources & Tools\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const challengeLinks = [\n  {\n    title: \"Hackmud\",\n    href: \"https://www.hackmud.com/\",\n    description: \"A massively multiplayer online text-based hacking simulator.\",\n  },\n];\n\nexport const honeypotLinks = [\n  {\n    title: \"Riotpot\",\n    href: \"https://github.com/honeynet/riotpot\",\n    description: \"An interactive honeypot for IoT and OT devices.\",\n  },\n  {\n    title: \"Honeypot ToGo AAU (HosTaGe)\",\n    href: \"https://aau-network-security.github.io/HosTaGe/\",\n    description: \"A low-interaction honeypot for mobile devices.\",\n  },\n];\n\nexport const otherSecurityLinks = [\n  {\n    title: \"Collection of Cyber Bookmarks\",\n    href: \"https://github.com/x0rb3l/Cyber-Bookmarks\",\n    description: \"A curated list of cybersecurity-related bookmarks.\",\n  },\n  {\n    title: \"The Hacker's Choice (THC)\",\n    href: \"https://www.thc.org/\",\n    description: \"One of the oldest and most renowned hacking groups.\",\n  },\n  {\n    title: \"Ransom Database\",\n    href: \"https://www.ransom-db.com/\",\n    description: \"A database tracking ransomware attacks and information.\",\n  },\n  {\n    title: \"AppTotal - Analyze your app\",\n    href: \"https://apptotal.io/\",\n    description: \"Mobile application security analysis platform.\",\n  },\n];\n\n## Challenges\n\n<MyLinkGrid links={challengeLinks} />\n\n## Honeypots\n\n<MyLinkGrid links={honeypotLinks} />\n\n## Other Security Resources\n\n<MyLinkGrid links={otherSecurityLinks} />\n\n\n# General Tech Tools & Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const techLinks = [\n  {\n    title: \"Filterlists\",\n    href: \"https://filterlists.com/\",\n    description:\n      \"A comprehensive directory of filter lists for ad blockers and other privacy tools.\",\n  },\n  {\n    title: \"Alternative To\",\n    href: \"https://alternativeto.net/\",\n    description: \"Find alternatives to software, websites, and apps.\",\n  },\n  {\n    title: \"VyOS - Open-Source Router & Firewall\",\n    href: \"https://vyos.io/\",\n    description:\n      \"A Linux-based network operating system that provides software-based network routing, firewall, and VPN functionality.\",\n  },\n  {\n    title: \"Safing Portmaster - Open-Source Application Firewall\",\n    href: \"https://safing.io/\",\n    description:\n      \"Monitor and block network connections on a per-application basis.\",\n  },\n  {\n    title: \"Umami Analytics\",\n    href: \"https://umami.is/\",\n    description:\n      \"A simple, fast, privacy-focused open-source alternative to Google Analytics.\",\n  },\n  {\n    title: \"Mastodon Instance Emoji List (Emojos)\",\n    href: \"https://emojos.in/\",\n    description:\n      \"Discover custom emojis available on various Mastodon instances.\",\n  },\n  {\n    title: \"MIT OpenCourseWare\",\n    href: \"https://ocw.mit.edu/\",\n    description: \"Access free course materials from MIT.\",\n  },\n  {\n    title: \"Google .new Shortcuts\",\n    href: \"https://whats.new/shortcuts/\",\n    description:\n      \"A list of .new domain shortcuts for quickly creating new Google documents, sheets, etc.\",\n  },\n  {\n    title: \"TuneMyMusic - Transfer Playlists\",\n    href: \"https://www.tunemymusic.com/\",\n    description:\n      \"Transfer your music playlists between various streaming services.\",\n  },\n  {\n    title: \"Activepieces - Open-Source No-Code Automation\",\n    href: \"https://www.activepieces.com/\",\n    description:\n      \"Automate business workflows without coding, open-source alternative to Zapier.\",\n  },\n  {\n    title: \"RAID is not Backup\",\n    href: \"https://www.raidisnotabackup.com/\",\n    description:\n      \"A clear explanation of why RAID systems do not replace proper backup strategies.\",\n  },\n  {\n    title: \"Talk About Backups\",\n    href: \"https://talk-about-it.ca/backups/\",\n    description: \"Resources and advice on the importance of data backups.\",\n  },\n  {\n    title: \"Technical SEO robots.txt Guide\",\n    href: \"https://technicalseo.com/tools/docs/robots-txt/\",\n    description:\n      \"Documentation and tools related to the robots.txt file for SEO.\",\n  },\n  {\n    title: \"GPSJam.org - GPS Jamming Map\",\n    href: \"https://gpsjam.org/\",\n    description: \"Tracks and maps GPS interference and jamming incidents.\",\n  },\n  {\n    title: \"crt.sh - Certificate Search\",\n    href: \"https://crt.sh/\",\n    description:\n      \"Search for SSL/TLS certificates issued by public certificate authorities.\",\n  },\n  {\n    title: \"Gopeed Download Manager\",\n    href: \"https://gopeed.com/\",\n    description: \"A high-speed downloader with a modern interface.\",\n  },\n  {\n    title: \"Ludus - Infra deployments\",\n    href: \"https://ludus.cloud/\",\n    description:\n      \"Platform for creating and managing on-demand, disposable infrastructure environments.\",\n  },\n  {\n    title: \"Selfh.st Blog\",\n    href: \"https://selfh.st/\",\n    description: \"A blog focusing on self-hosting software and services.\",\n  },\n  {\n    title: \"Parsec - Remote Desktop\",\n    href: \"https://parsec.app/\",\n    description:\n      \"Low-latency remote desktop application, popular for gaming and creative work.\",\n  },\n];\n\n<MyLinkGrid links={techLinks} gridTitle=\"Useful Tech Utilities & Information\" />\n\n\n# Windows Tools & Resources\n\nimport MyLinkGrid from \"@/components/MyLinkGrid\";\n\nexport const windowsLinks = [\n  // {\n  //   title: \"Activator\",\n  //   href: \"https://massgrave.dev/\",\n  //   description: \"Tools for Windows and Office activation (use with caution and ensure legality).\"\n  // },\n  {\n    title: \"WSLDL\",\n    href: \"https://wsldl-pg.github.io/docs/\",\n    description:\n      \"Unofficial documentation and resources for WSL Distro Launcher.\",\n  },\n];\n\n<MyLinkGrid links={windowsLinks} gridTitle=\"Windows Specific Utilities\" />\n\n\n# Git\n\nI use Delta for my gitconfig - it provides beautiful syntax-highlighted diffs with side-by-side view.\n\n## My Git Configuration\n\n```ini title=\"~/.gitconfig\"\n# Column UI settings: configure how git displays output in columns for certain commands.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-column\n[column]\n    # Automatically enable column display for some git commands\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-columnui\n    ui = auto\n\n# Branch settings: control sorting and behavior of git branches.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-branch\n[branch]\n    # Sort branches by most recent committer date (descending)\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-branchsort\n    sort = -committerdate\n\n# Tag settings: control sorting and display of git tags.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-tag\n[tag]\n    # Sort tags by version, then by refname\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-tagsort\n    sort = version:refname\n\n# Diff settings: configure how git shows differences between commits and files.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-diff\n[diff]\n    # Use the histogram diff algorithm for better performance\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-diffalgorithm\n    algorithm = histogram\n    # Show moved code in plain color (not highlighted)\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-diffcolorMoved\n    colorMoved = plain\n    # Use mnemonic prefixes in diff output\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-diffmnemonicPrefix\n    mnemonicPrefix = true\n    # Detect renames in diffs\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-diffrenames\n    renames = true\n\n# Push settings: control how git pushes changes to remotes.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-push\n[push]\n    # Use 'simple' push behavior (current branch to same name)\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushdefault\n    default = simple\n    # Automatically set up remote tracking on push\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushautoSetupRemote\n    autoSetupRemote = true\n    # Push tags when pushing commits\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushfollowTags\n    followTags = true\n\n# Fetch settings: control how git fetches changes from remotes.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetch\n[fetch]\n    # Remove remote-tracking refs that no longer exist on remote\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchprune\n    prune = true\n    # Prune tags that no longer exist on remote\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchpruneTags\n    pruneTags = true\n    # Fetch all remotes by default\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchall\n    all = true\n\n# Help settings: configure help and command correction behavior.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-help\n[help]\n    # Prompt before auto-correcting mistyped commands\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-helpautocorrect\n    autocorrect = prompt\n\n# Commit settings: control commit message and diff display behavior.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-commit\n[commit]\n    # Show diff of changes to be committed in commit message editor\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-commitverbose\n    verbose = true\n\n# Rerere settings: enable and configure reuse of recorded conflict resolutions.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-rerere\n[rerere]\n    # Enable reuse recorded resolution (rerere) for merge conflicts\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rerereenabled\n    enabled = true\n    # Automatically update rerere records after resolving conflicts\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rerereautoupdate\n    autoupdate = true\n\n# Rebase settings: control behavior of git rebase operations.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebase\n[rebase]\n    # Automatically squash fixup/amend commits during rebase\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebaseautoSquash\n    autoSquash = true\n    # Stash changes automatically before rebase and re-apply after\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebaseautoStash\n    autoStash = true\n    # Update branch refs after rebase\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebaseupdateRefs\n    updateRefs = true\n\n# Core settings: fundamental git behavior and system integration.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-core\n[core]\n    # Use delta as the pager for all git output (improves diff display)\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-corepager\n    pager = delta\n\n# Interactive settings: configure interactive commands like git add -p.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-interactive\n[interactive]\n    # Use delta for interactive diffs, color only\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-interactivediffFilter\n    diffFilter = delta --color-only\n\n# Delta settings: configure the delta diff viewer for git output.\n# https://dandavison.github.io/delta/\n[delta]\n    # Show diffs side-by-side in delta\n    # https://dandavison.github.io/delta/options.html#side-by-side\n    side-by-side = true\n    # Enable navigation in delta pager\n    # https://dandavison.github.io/delta/options.html#navigate\n    navigate = true\n    # Show line numbers in delta output\n    # https://dandavison.github.io/delta/options.html#line-numbers\n    line-numbers = true\n\n# Merge settings: control merge conflict style and resolution behavior.\n# https://git-scm.com/docs/git-config#Documentation/git-config.txt-merge\n[merge]\n    # Use zdiff3 style for merge conflict markers (improved context)\n    # https://git-scm.com/docs/git-config#Documentation/git-config.txt-mergeconflictstyle\n    conflictstyle = zdiff3\n```\n\n## Sources\n\n<Cards>\n  <Card title=\"How Git Core Devs Configure Git\" href=\"https://blog.gitbutler.com/how-git-core-devs-configure-git/\" />\n\n  <Card title=\"Delta - A syntax-highlighting pager for git\" href=\"https://dandavison.github.io/delta/\" />\n</Cards>\n\n\n# Helm\n\n## Plugins\n\n<Cards>\n  <Card title=\"Helm Secrets\" href=\"https://github.com/jkroepke/helm-secrets\" description=\"Plugin to manage secrets\" />\n\n  <Card title=\"Helm Git\" href=\"https://github.com/aslafy-z/helm-git\" description=\"Plugin for git-based charts\" />\n\n  <Card title=\"Helm Diff\" href=\"https://github.com/databus23/helm-diff\" description=\"Preview helm upgrades\" />\n</Cards>\n\n## Examples\n\n### Get values for helm chart\n\n```shell\nhelm get values <helm name> --namespace <namespace>\n```\n\n### Lint helm files\n\n```shell\nhelm lint --strict\n```\n\n### Dry run of an install of helm chart\n\n```shell\nhelm install --dry-run --debug\n```\n\n\n# Good Stuff\n\n<Cards>\n  <Card title=\"Git\" href=\"/docs/goodstuff/git\" description=\"Git configuration with Delta\" />\n\n  <Card title=\"Helm\" href=\"/docs/goodstuff/helm\" description=\"Helm plugins and commands\" />\n\n  <Card title=\"NodeJS\" href=\"/docs/goodstuff/nodejs\" description=\"NodeJS tools and utilities\" />\n\n  <Card title=\"VSCode\" href=\"/docs/goodstuff/vscode\" description=\"VSCode configuration\" />\n</Cards>\n\n\n# NodeJS\n\n## Check unused dependencies\n\nInstall depcheck globally:\n\n```bash\nnpm install -g depcheck\n# or\npnpm add -g depcheck\n# or\nyarn global add depcheck\n```\n\nRun depcheck:\n\n```bash\ndepcheck\n```\n\n\n# Spec files\n\n## CMake\n\nRemember these lines when setting up cmake specfile\n\n```bash\nBuildRequires: cmake >= 3.19\nBuildRequires: cargo >= 1.40\nBuildRequires: rust >= 1.40\n\n%build\n%cmake\n%cmake_build\n\n%install\n%cmake_install\n```\n\n\n# VSCode\n\n## My VSCode Configuration\n\nEssential VSCode settings for improved development experience.\n\n```jsonc title=\"settings.json\"\n{\n  // https://code.visualstudio.com/blogs/2025/02/12/next-edit-suggestions\n  \"github.copilot.nextEditSuggestions.enabled\": true,\n\n  // Disable telemetry\n  \"telemetry.enableCrashReporter\": false,\n  \"telemetry.enableTelemetry\": false,\n\n  // https://code.visualstudio.com/updates/v1_60#_high-performance-bracket-pair-colorization\n  \"editor.bracketPairColorization.enabled\": true\n}\n```\n\n### Key Features\n\n* **GitHub Copilot Next Edit Suggestions** - Enhanced AI-powered code suggestions\n* **Telemetry Disabled** - Privacy-focused configuration\n* **Bracket Pair Colorization** - High-performance colored bracket matching\n\n\n# autocopr\n\n## Sources\n\n### Repo\n\n* [https://github.com/RelativeSure/autocopr](https://github.com/RelativeSure/autocopr)\n\n### How-To\n\n* [http://ftp.rpm.org/max-rpm/s1-rpm-inside-macros.html](http://ftp.rpm.org/max-rpm/s1-rpm-inside-macros.html)\n\n\n# Projects\n\n# Projects\n\nCollection of personal projects, experiments, and work in progress.\n\n## Current Projects\n\n* **AutoCOPR** - Automation tools for COPR (Cool Other Package Repo)\n* **Work in Progress** - Various projects under development\n\n\n# Work in Progress\n\n<Cards>\n  <Card title=\"autocopr\" href=\"https://github.com/RelativeSure/autocopr\" description=\"Auto update spec files for use in fedora copr repo.\" />\n\n  <Card title=\"Build Docker Images\" href=\"https://github.com/RelativeSure/build-gh-actions-image\" description=\"Build images for use in different repos to centralize all images in use.\" />\n\n  <Card title=\"CircleCI Megalinter Orb\" href=\"https://github.com/KubeArchitect/circleci-megalinter-orb\" description=\"CircleCI public orb to use Megalinter in CircleCI workflows.\" />\n</Cards>\n\n\n# Windows\n\n# Windows\n\nGuides and resources for Windows administration, PowerShell, and WSL (Windows Subsystem for Linux).\n\n## Topics\n\n* **PowerShell** - PowerShell scripts and commands\n* **WSL** - Windows Subsystem for Linux setup and usage\n\n\n# PowerShell\n\n## WindowsUpdate Module\n\nThe `PSWindowsUpdate` module allows you to manage Windows updates from PowerShell. To install it, run the following command in an elevated PowerShell session:\n\n```powershell\nInstall-Module -Name PSWindowsUpdate\n```\n\n\n# WSL\n\n## WSL Subnet\n\nTo setup a new network in your NAT'ed interface in WSL you have to edit in the registry.\nThe keys can be found under this path: \"Computer\\HKEY\\_LOCAL\\_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Lxss\".\nThere can be two keys there have to be changed. They can be changed to the following:\n\n* NatGatewayIpAddress   = `192.168.0.1`\n* NatNetwork            = `192.168.0.0/24`\n\nAfterwards you have to restart your PC. When thats done open a WSL window and check the network interfaces if they have been changed to the new network.\n\n## Windows Terminal\n\nGist to personal VSCode settings file\n\n* [Personal VSCode Settings](https://gist.github.com/RelativeSure/60b590d1795521ef9d213c83afd16066)\n\nGitHub repo to personal dotfiles\n\n:::caution\nDotfile repo still work in progress\n:::\n\n[WSL Configuration dotfiles](https://github.com/RelativeSure/wsl-configuration)\n\n## Linux Tools\n\n* [lsd](https://github.com/lsd-rs/lsd)\n* [lunarvim](https://www.lunarvim.org)\n* [git-delta](https://github.com/dandavison/delta)\n\n\n# Website setup\n\nThis page is primarily for use on how I setup different parts of my website. It is a work in progress and will be updated as I make changes to my website.\n\n## Disable line numbers\n\n<Steps>\n  1. Use `<Code>` block. As seen here:\n\n     [https://expressive-code.com/key-features/code-component/](https://expressive-code.com/key-features/code-component/)\n\n  2. Follow the installation on Line Numbers here:\n\n     [https://expressive-code.com/plugins/line-numbers/](https://expressive-code.com/plugins/line-numbers/)\n\n  3. Add `meta=\"showLineNumbers=false\"` to the `<Code>` block or the Markdown code block.\n\n     ```mdx showLineNumbers=false\n     <Code code=\"add code here\" lang=\"shell\" meta=\"showLineNumbers=false\" />\n     ```\n\n     ````mdx showLineNumbers=false\n     ```mdx showLineNumbers=false\n     alternative way\n     ```\n     ````\n\n  4. Line numbers will **not** be shown on the code block.\n</Steps>\n\n\n# Aliases\n\n## Common\n\n```shell\nalias ll='ls -l'\n```\n\n## Bash\n\n## Fish\n\n\n# Ansible\n\n\n\n# Basic\n\nAll the commands listed here can be used in each linux distro.\n\n## Check manual for each command\n\n**OBS:** Not every command has a manual page.\n\nRun `man <command>` in CLI\n\n## List items in directory\n\nTo see what files are in your current directory: `ls`\n\n## See content of file\n\nPrint out the content of a file into terminal: `cat`\n\nOpen the file in a window and open it at the bottom: `less`.\n\nOpen the file in a window and open it at the top: `head`.\n\n## Change shell\n\n```shell\n# Check available shells\ncat /etc/shells\n\n# Change shell\nsudo chsh -s <path to shell>\n```\n\n\n# Fish Shell\n\n## Fisher Plugin Manager\n\n### Install\n\n<Cards>\n  <Card title=\"Install Fisher\" href=\"https://github.com/jorgebucaran/fisher\" description=\"A plugin manager for Fish\" />\n</Cards>\n\n### Plugins\n\n<Cards>\n  <Card title=\"Git\" href=\"https://github.com/jhillyerd/plugin-git\" description=\"Git utilities for Fish\" />\n\n  <Card title=\"fzf\" href=\"https://github.com/PatrickF1/fzf.fish\" description=\"Fuzzy finder integration\" />\n\n  <Card title=\"tide\" href=\"https://github.com/IlanCosman/tide\" description=\"Modern prompt theme\" />\n</Cards>\n\n\n# Linux\n\n# Linux\n\nCollection of Linux guides, configuration files, and useful tools for system administration and development.\n\n## Topics\n\nBrowse through the various Linux topics:\n\n* **Aliases** - Useful shell aliases\n* **Ansible** - Configuration management with Ansible\n* **Basic Commands** - Essential Linux commands\n* **Fish Shell** - Modern shell configuration\n* **LVM** - Logical Volume Management\n* **Puppet** - Infrastructure automation\n* **Requirements** - Package requirements and dependencies\n* **Sources** - Repository and source management\n* **Ubuntu** - Ubuntu-specific guides\n\n\n# Logical Volume Manager\n\n## Common\n\nCheck if LVM can access and manage system disks\n\n```shell showLineNumbers=false\nsudo lvmdiskscan\n```\n\nList physical volume(s)\n\n```shell showLineNumbers=false\nsudo pvs\n```\n\nList volume groups\n\n```shell showLineNumbers=false\nsudo vgs\n```\n\nVerify physical volume(s) was created successfully\n\n```shell showLineNumbers=false\nsudo pvdisplay /dev/<disk>\n```\n\nVerify the logical volume was created successfully\n\n```shell showLineNumbers=false\nsudo lvdisplay\n```\n\n````shell showLineNumbers=false\n\n## Physical\n\nCreate physical volumes in LVM\n\n```shell showLineNumbers=false\n# example: sudo pv create /dev/sdb\nsudo pvcreate /dev/<disk>\n````\n\n## Volume\n\nCreate volume group based on physical volumes\n\n```shell showLineNumbers=false\n# One physical disk in volume group\nsudo vgcreate VolumeGroup01 /dev/sdb\n\n# Multiple physical disks in same volume group\nsudo vgcreate VolumeGroup01 /dev/sdc /dev/sdd /dev/sde\n```\n\n## Logical\n\nCreate logical volumes based on volume group\n\n```shell showLineNumbers=false\n# Allocate disk space for multiple volumes from same volume group\nsudo lvcreate -n repos -L 30G VolumeGroup01\nsudo lvcreate -n backup -L 50G VolumeGroup01\nsudo lvcreate -n dev -L 100G VolumeGroup01\n\n# Allocate rest of disk space\nsudo lvcreate -n disk01 -l 100%FREE VolumeGroup01\n```\n\n# Mount logical volumes\n\n<Steps>\n  1. Format logical volumes and do it for all volumes\n\n     ```shell showLineNumbers=false\n     # example: sudo mkfs.ext4 /dev/VolumeGroup01/backup\n     sudo mkfs.ext4 /dev/<volume group>/<name of volume>\n\n     ```\n\n  2. Create folders (optional)\n\n     ```shell showLineNumbers=false\n     # example: sudo mkdir -p /mnt/backup\n     # example: sudo mkdir -p /opt/{repos,backup,dev}\n     sudo mkdir -p /<path>/<name of volume>\n     ```\n\n  3. Mount the disks\n\n     ```shell showLineNumbers=false\n     # example: sudo mount /dev/VolumeGroup01/backup /mnt/backup\n     # example: sudo mount /dev/VolumeGroup01/dev /opt/dev\n     sudo mount /dev/<volume group>/<name of volume> /<path>/<name of volume>\n\n     # Verify the mount was successful\n     df -h\n     # or\n     mount | grep <volume group>\n     ```\n\n  4. Add to fstab to permanently add the disks\n\n     ```shell showLineNumbers=false\n     # use your editor of choice (nano, vi, vim, etc.)\n     sudo vim /etc/fstab\n\n     # Add the following\n     # example: /dev/VolumeGroup01/backup /mnt/backup ext4 defaults,nofail 0 0\n     /dev/<volume group>/<name of volume> /<path>/<name of volume> ext4 defaults,nofail 0 0\n     ```\n</Steps>\n\n\n# Puppet\n\n\n\n# Requirements\n\n## Required\n\n<Cards>\n  <Card title=\"bat\" href=\"https://github.com/sharkdp/bat/\" description=\"A cat(1) clone with wings.\" />\n\n  <Card title=\"fzf\" href=\"https://github.com/junegunn/fzf\" description=\"A command-line fuzzy finder\" />\n\n  <Card title=\"Git Delta\" href=\"https://github.com/dandavison/delta\" description=\"A syntax-highlighting pager for git, diff, grep, and blame output\" />\n</Cards>\n\n## Optional\n\n<Cards>\n  <Card title=\"mise\" href=\"https://mise.jdx.dev/\" description=\"The front-end to your dev env\" />\n\n  <Card title=\"ripgrep\" href=\"https://github.com/BurntSushi/ripgrep\" description=\"ripgrep recursively searches directories for a regex pattern while respecting your gitignore\" />\n</Cards>\n\n### Fish\n\n<Cards>\n  <Card title=\"fisher\" href=\"https://github.com/jorgebucaran/fisher\" description=\"A plugin manager for Fish\" />\n</Cards>\n\n#### Fisher\n\n<Cards>\n  <Card title=\"Fish SSH Agent\" href=\"https://github.com/danhper/fish-ssh-agent\" description=\"Utility functions to start your ssh agent when using fish shell\" />\n</Cards>\n\n### Fedora\n\nUsing my [COPR repo](https://copr.fedorainfracloud.org/coprs/relativesure/all-packages/), you can install different tools that I use on a daily basis.\n\n\n# Sites\n\n## TLDR\n\nIf you don't want to read the manual page, you can use the `tldr` command. This can be [installed](https://github.com/tldr-pages/tldr) or used on their [website](https://tldr.inbrowser.app/)\n\n## explainshell\n\nIf you want to see what a command does, you can use [explainshell](https://explainshell.com)\n\n\n# Ubuntu\n\n## Root access via nonroot\n\n```shell\nbusybox sh -c \"unshare -Urmin\"\n```\n"}